name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Validate tag is on latest commit
        run: |
          TAG_COMMIT=$(git rev-list -n 1 ${{ github.ref_name }})
          MAIN_COMMIT=$(git rev-list -n 1 origin/main)
          echo "Tag commit: $TAG_COMMIT"
          echo "Main commit: $MAIN_COMMIT"
          if [ "$TAG_COMMIT" != "$MAIN_COMMIT" ]; then
            echo "⚠️  Warning: Tag ${{ github.ref_name }} is not on the latest commit of main branch"
            echo "Tag commit: $TAG_COMMIT"
            echo "Main commit: $MAIN_COMMIT"
            echo "This may indicate a race condition in release process"
          else
            echo "✅ Tag is on latest commit"
          fi

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=semver,pattern={{raw}}
            type=semver,pattern=v{{major}}.{{minor}},enable=${{ !contains(github.ref_name, '-') }}
            type=semver,pattern=v{{major}},enable=${{ !contains(github.ref_name, '-') }}
            type=raw,value=latest,enable=${{ !contains(github.ref_name, '-') }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
